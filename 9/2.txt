import java.util.*;

public class Main {

	public static final int INF = (int) 1e9;
	public static int n, m, x, k;
	public static int[][] graph = new int[101][101];

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);

		n = sc.nextInt();
		m = sc.nextInt();		
		
		for (int i = 0; i < graph.length; i++) {
			Arrays.fill(graph[i], INF);
		}

		for (int i = 1; i <= n; i++) {
			for (int j = 1; j <= n; j++) {
				if (i == j) {
					graph[i][j] = 0;
				}
			}
		}

		for (int i = 1; i <= m; i++) {
			int a = sc.nextInt();
			int b = sc.nextInt();
			graph[a][b] = 1;
			graph[b][a] = 1;
		}
		
		x = sc.nextInt();
		k = sc.nextInt();

		for (int i = 1; i <= n; i++) {
			for (int j = 1; j <= n; j++) {
				for (int k = 1; k <= n; k++) {
					graph[j][k] = Math.min(graph[j][k], graph[i][k] + graph[j][i]);
				}
			}
		}

		int distance = graph[1][k] + graph[k][x];
		if (distance >= INF) {
			System.out.println(-1);
		} else {
			System.out.println(distance);
		}
		
	}
}